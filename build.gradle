plugins {
    id 'java'
}

group 'org.mentalizr'
version = rootProject.file('version').text.trim()

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {

    implementation 'org.mentalizr:m7r-content-manager:0.1-SNAPSHOT'
    implementation 'org.mentalizr:mdp-compiler:0.0.9-SNAPSHOT'
    implementation 'org.mentalizr:m7r-service-objects:0.0.1-SNAPSHOT'

//    implementation 'com.github.arthurpicht:cli:095c04163a'
    implementation 'com.github.arthurpicht:cli:0.1-beta1'
    implementation 'com.github.arthurpicht:utils-core:1.2.1'
//    implementation 'com.github.arthurpicht:utils-io:08e8e6f0fb'
    implementation 'com.github.arthurpicht:utils-io:0.0.5'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'
    implementation 'org.glassfish.jersey.media:jersey-media-json-binding:2.32'
    implementation group: 'com.diogonunes', name: 'JColor', version: '5.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

task extractDependencies(type: Copy, dependsOn: jar) {
    from configurations.runtimeClasspath
    into "$buildDir/dependencies"
}

task fatJar(type: Jar, dependsOn: extractDependencies) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes 'Main-Class': 'org.mentalizr.contentManagerCli.ContentManagerCli'
        attributes 'Version': project.property("version")
        attributes 'Build' : new Date().format('yyyyMMddHHmmss')
    }
    from {
        file("$buildDir/dependencies").listFiles().collect { zipTree(it) }
    }
    from {
        file("$buildDir/libs").listFiles().collect { zipTree(it) }
    }
    destinationDirectory.set(file("$buildDir/fatjar"))
}